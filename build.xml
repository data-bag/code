<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- ====================================================================== 
    Copyright 2010-2013 Konstantin Livitski

    This program is free software: you can redistribute it and/or modify
    it under the terms of the Data-bag Project License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    Data-bag Project License for more details.

    You should find a copy of the Data-bag Project License in the
    `data-bag.md` file in the `LICENSE` directory
    of this package or repository.  If not, see
    <http://www.livitski.name/projects/data-bag/license>. If you have any
    questions or concerns, contact the project's maintainers at
    <http://www.livitski.name/contact>. 
     ====================================================================== -->
<project name="Data-bag" default="jar">
	<property name="version" value="1.05" />
	<property name="source.dir" location="${basedir}/src" />
	<property name="test.dir" location="${basedir}/test" />
	<property name="lib.dir" location="${basedir}/lib" />
	<property name="libcache.dir.rel" value="libcache" />
	<property name="libcache.dir" location="${basedir}/${libcache.dir.rel}" />
	<property name="dest.jar.rel" value="databag.jar" />
	<property name="dest.jar.path" location="${basedir}/${dest.jar.rel}" />
	<property name="javadoc.dir.rel" value="javadoc" />
	<property name="javadoc.dir" location="${basedir}/${javadoc.dir.rel}" />
	<property name="distfiles.dir.rel" value="distfiles" />
	<property name="distfiles.dir" location="${basedir}/${distfiles.dir.rel}" />
	<property name="docfiles.encoding" value="UTF-8" />
	<property name="classes.main" value="name.livitski.databag.cli.Launcher" />
	<property name="git.gitignore.file" location="${basedir}/.gitignore" />
	<property name="author" value="Konstantin Livitski" />
	<property name="dist.rel" value="databag-${version}.zip" />
	<property name="dist.path" location="${basedir}/${dist.rel}" />

	<path id="libs.bundle">
		<fileset dir="${lib.dir}" includes="*.jar" />
	</path>

	<path id="libs.test">
		<path refid="libs.bundle" />
		<pathelement location="${lib.dir}/testing/*.jar" />
	</path>

	<path id="docfiles.md.common">
		<fileset dir="${basedir}">
			<include name="NOTICE.md" />
			<include name="LICENSE/**/*.md" />
			<include name="docs/manual.md" />
		</fileset>
	</path>

	<path id="docfiles.md.dist">
		<fileset dir="${distfiles.dir}" includes="**/*.md" />
		<path refid="docfiles.md.common" />
	</path>

	<target name="-jar-check">
		<uptodate property="build.uptodate" targetfile="${dest.jar.path}">
			<srcfiles dir="${source.dir}" />
		</uptodate>
    </target>

	<target name="-prepare-build" unless="build.uptodate">
		<tstamp>
			<format property="version.time" pattern="yyMMdd" />
		</tstamp>
		<tempfile property="build.dir" destdir="${java.io.tmpdir}" prefix="dbagbuild" />
    	<mkdir dir="${build.dir}" />
    </target>

    <target name="-build" if="build.dir">
    	<javac destdir="${build.dir}" debug="true" debuglevel="lines,source" source="1.5" target="1.5">
    		<compilerarg line="-Xlint:unchecked" />
    		<classpath refid="libs.test" />
			<src path="${source.dir}" />
			<!-- src path="${test.dir}" / -->
    	</javac>
    	<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${source.dir}" includes="**/*.properties" />
    	</copy>
    </target>

    <target name="jar" description="Builds JAR file for the project"
    	depends="-jar-check,-prepare-build,-build" if="build.dir">
    	<unjar dest="${libcache.dir}" overwrite="false">
    		<path refid="libs.bundle" />
    	    <patternset>
    	        <exclude name="META-INF/**"/>
    	    </patternset>
    	</unjar>
    	<jar destfile="${dest.jar.path}" update="false" duplicate="fail">
    		<fileset dir="${build.dir}" />
    		<fileset dir="${libcache.dir}" />
    		<manifest>
    			<attribute name="Main-Class" value="${classes.main}"/>
    		    <section name="name/livitski/databag/">
    		      <attribute name="Specification-Title" value="${ant.project.name}"/>
    		      <attribute name="Specification-Version" value="${version}"/>
    		      <attribute name="Specification-Vendor" value="${author}"/>
    		      <attribute name="Implementation-Version" value="${version}.${version.time}"/> 
    		      <attribute name="Implementation-Vendor" value="${author}"/>
    		    </section>
    		    <section name="name/livitski/databag/cli/">
    		      <attribute name="Implementation-Title" value="${ant.project.name} command-line launcher"/>
    		      <attribute name="Implementation-Version" value="${version}.${version.time}"/> 
    		      <attribute name="Implementation-Vendor" value="${author}"/>
    		    </section>
    		</manifest>
    	</jar>
    	<delete dir="${build.dir}" quiet="true" />
  </target>

    <target name="gitignore" description="Generates the .gitignore file">
    	<delete file="${git.gitignore.file}" />
    	<echo file="${git.gitignore.file}"># This file is generated by running 'ant gitignore' for the project.
# Any changes you make here will be overwritten next time that task is run.

/.*
/*.build
</echo>
    	<echo file="${git.gitignore.file}" append="true" message="/${libcache.dir.rel}">
</echo>	<echo file="${git.gitignore.file}" append="true" message="/${javadoc.dir.rel}">
</echo>	<echo file="${git.gitignore.file}" append="true" message="/*.jar">
</echo>	<echo file="${git.gitignore.file}" append="true" message="/*.zip">
</echo>	
	</target>

    <target name="javadoc" description="Generates Javadoc from the project's sources">
    	<delete dir="${javadoc.dir}" quiet="true" />
    	<mkdir dir="${javadoc.dir}" />
        <javadoc access="protected" author="true" classpathref="libs.test"
        	destdir="${javadoc.dir}" doctitle="${ant.project.name} Project"
        	nodeprecated="false" nodeprecatedlist="false"
        	noindex="false" nonavbar="false" notree="false"
        	packagenames="name.livitski.tools,name.livitski.databag.cli,name.livitski.databag.db,name.livitski.databag.db.schema,name.livitski.databag.app,name.livitski.databag.app.sync,name.livitski.databag.app.maint,name.livitski.databag.app.filter,name.livitski.databag.diff,name.livitski.databag.app.info"
        	source="1.5" sourcepath="${source.dir}" splitindex="true" use="true" version="true">
            <link href="http://docs.oracle.com/javase/6/docs/api/"/>
        </javadoc>
    </target>

	<target name="dist" description="Builds a binary distribution" depends="jar">
		<!-- Convert .md files to .html in the distribution replacing .md with .html in internal links -->
		<tempfile property="dist.md.tmp.path" destdir="${java.io.tmpdir}" prefix="dbagmd" />
		<mkdir dir="${dist.md.tmp.path}" />
		<copy todir="${dist.md.tmp.path}">
			<path refid="docfiles.md.dist" />
		</copy>
		<replace dir="${dist.md.tmp.path}" token=".md" value=".html" encoding="${docfiles.encoding}">
			<exclude name="docs/manual.md" />
		</replace>
		<tempfile property="dist.tmp.path" destdir="${java.io.tmpdir}" prefix="dbagdist" />
		<mkdir dir="${dist.tmp.path}" />
		<pathconvert property="dist.md.files" pathsep=" ">
			<map from="${dist.md.tmp.path}/" to="" />
			<fileset dir="${dist.md.tmp.path}" />
		</pathconvert>
		<java jar="${lib.dir}/building/txtmark.jar" fork="true" failonerror="true" dir="${dist.md.tmp.path}">
			<arg value="${dist.tmp.path}" />
			<arg line="${dist.md.files}" />
			<sysproperty key="name.livitski.tools.txtmark.encoding" value="${docfiles.encoding}" />
		</java>
		<delete dir="${dist.md.tmp.path}" />
		<!-- Add TOC to the converted manual  -->
		<tempfile property="dist.manual.tmp.location" destdir="${dist.tmp.path}" prefix="manual" />
		<move file="${dist.tmp.path}/docs/manual.html" tofile="${dist.manual.tmp.location}" />
		<echo message="Adding TOC to the manual ..." />
		<java classname="name.livitski.tools.html.toc.ProcessFile" fork="true"
			output="${dist.tmp.path}/docs/manual.html" failonerror="true" logError="true">
			<classpath>
				<fileset dir="${lib.dir}/building" >
					<include name="html-toc.jar" />
					<include name="staxform.jar" />
				</fileset>
			</classpath>
			<arg value="${dist.manual.tmp.location}" />
			<sysproperty key="name.livitski.tools.html.toc.encoding" value="${docfiles.encoding}" />
		</java>
		<delete file="${dist.manual.tmp.location}" />
		<!-- Apply original timestamps to the converted .md files -->
		<touch>
			<path refid="docfiles.md.dist" />
			<!-- NOTE: source names in the mapper must be relative to a fileset -->
			<mapper type="glob" from="*.md" to="${dist.tmp.path}/*.html" />
		</touch>
		<!-- Copy the binary, license and other materials to the staging directory -->
		<copy todir="${dist.tmp.path}" preservelastmodified="true">
			<fileset file="${dest.jar.path}" />
			<fileset dir="${distfiles.dir}" excludes="**/*.md" />
		</copy>
		<mkdir dir="${dist.tmp.path}/LICENSE" />
		<copy todir="${dist.tmp.path}/LICENSE" preservelastmodified="true">
			<fileset dir="${basedir}/LICENSE">
				<exclude name="**/*.md" />
			</fileset>
		</copy>
		<!-- Package the results -->
		<zip destfile="${dist.path}" basedir="${dist.tmp.path}" compress="false" />
		<delete dir="${dist.tmp.path}" />
    </target>
</project>
